StrategyObj@projectionParams<-list(bag = c(-99, -99), effort = matrix(1:1, nrow=50, ncol=2, byrow = FALSE))
#-----------------------
#Build inputObject
#-----------------------
TimeAreaObj@recArea <- TimeAreaObj@recArea / sum(TimeAreaObj@recArea) #Make sure this sums to 1
#------------------------------------------------
#Build stochastic & uncertainty range parameters
#------------------------------------------------
set.seed(seed = seed)
#Rec devs
RdevMatrix<-recDev(LifeHistoryObj, TimeAreaObj, StrategyObj)$Rmult
#Initial depletion (SSB rel)
Ddev<-bioDev(TimeAreaObj, StochasticObj)$Ddev
#Historical cpue
Cdev<-cpueDev(TimeAreaObj, StochasticObj)$Cdev
#Life history parmeters
LHdev<-lifehistoryDev(TimeAreaObj, StochasticObj)
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
class(StochasticObj) == "Stochastic"
length(StochasticObj@sameFisheryVul) > 0
StochasticObj@sameFisheryVul
class(StochasticObj) == "Stochastic"
length(StochasticObj@proFisheryVul) > 0
dim(StochasticObj@proFisheryVul)[1] == 2
sum(sapply(1:dim(StochasticObj@proFisheryVul)[2], function(x){StochasticObj@proFisheryVul[2,x] >= StochasticObj@proFisheryVul[1,x]})) == dim(StochasticObj@proFisheryVul)[2]
devtools::load_all()
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
StochasticObj@sameFisheryVul<-TRUE
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
StochasticObj@histFisheryRet<-matrix(c(40.1,0.1,45.1,0.2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryRet<-matrix(c(40.1,0.1,45.1,0.2), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryRet<-TRUE
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryRet<-matrix(c(40.1,0.1,45.1,0.2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryRet<-matrix(c(40.1,0.1,45.1,0.2), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryRet<-TRUE
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
X<-matrix(c(0,2),nrow=2, ncol=2)
X
X > 2
isTRUE(X > 2)
isTRUE(X < 3)
isTRUE(unlist(X < 3))
unlist(X < 3)
as.vector(X < 3)
sum(as.vector(X < 3))
X
sum(X)
sum(X > 3)
sum(X < 3)
sum(X < 2)
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-TRUE
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
#-----------------------------
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-FALSE
#Selectivity parameters
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
#-----------------------------
#Setup stochastic object
#-----------------------------
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-FALSE
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
#-----------------------------
#Setup stochastic object
#-----------------------------
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-FALSE
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
devtools::load_all()
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-TRUE
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-FALSE
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
#Check to see if uncertain fishery selectivity specified and created
if(!is.null(StochasticObj)){
#Find LH params that are not null
selList<-names(Sdev[!unlist(lapply(Sdev, is.null))])
if(NROW(LHList) > 0)
print(paste("Uncertainty in fishery selectivity parameters", LHList, "created. Is this the correct set?"))
}
#Rec devs
RdevMatrix<-recDev(LifeHistoryObj, TimeAreaObj, StrategyObj)$Rmult
#Initial depletion (SSB rel)
Ddev<-bioDev(TimeAreaObj, StochasticObj)$Ddev
#Historical cpue
Cdev<-cpueDev(TimeAreaObj, StochasticObj)$Cdev
#Life history parmeters
LHdev<-lifehistoryDev(TimeAreaObj, StochasticObj)
#Selectivity parameters
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
#Check to see if uncertain initial bio created
if(!is.null(StochasticObj)){
if(length(StochasticObj@historicalBio) > 1)
print(paste("Uncertainty in initial biomass", StochasticObj@historicalBio[1], "to", StochasticObj@historicalBio[2], TimeAreaObj@historicalBioType, "created. Is this the correct range?"))
}
#Check to see if uncertain life history specified and created
if(!is.null(StochasticObj)){
#Find LH params that are not null
LHList<-names(LHdev[!unlist(lapply(LHdev, is.null))])
if(NROW(LHList) > 0)
print(paste("Uncertainty in life history parameters", LHList, "created. Is this the correct set?"))
}
selList<-names(Sdev[!unlist(lapply(Sdev, is.null))])
selList
devtools::load_all()
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
devtools::load_all()
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
selList<-names(Sdev[!unlist(lapply(Sdev, is.null))])
selList
print(paste("Uncertainty in fishery selectivity parameters", LHList, "created. Is this the correct set?"))
#Check to see if uncertain fishery selectivity specified and created
if(!is.null(StochasticObj)){
#Find LH params that are not null
selList<-names(Sdev[!unlist(lapply(Sdev, is.null))])
if(NROW(LHList) > 0)
print(paste("Uncertainty in fishery selectivity parameters", selList, "created. Is this the correct set?"))
}
devtools::load_all()
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
selListHist<-names(Sdev$hist[!unlist(lapply(Sdev$hist, is.null))])
selListHist
X<-function(y){
print(y)
}
X()
selListPro<-names(Sdev$pro[!unlist(lapply(Sdev$pro, is.null))])
selListPro
NROW(selListPro) > 0
print(paste("Uncertainty in projection fishery selectivity parameters", selListPro, "created. Is this the correct set?"))
is.null(ProFisheryObj)
LHList<-names(LHdev[!unlist(lapply(LHdev, is.null))])
LHList
selListHist<-names(Sdev$hist[!unlist(lapply(Sdev$hist, is.null))])
selListPro<-names(Sdev$pro[!unlist(lapply(Sdev$pro, is.null))])
selListHist
selListPro
ROW(selListHist)
NROW(selListHist)
1:0
Sdev$hist
devtools::load_all()
Sdev<-selDev(HistFisheryObj, ProFisheryObj, StochasticObj)
Sdev
LHList<-names(LHdev[!unlist(lapply(LHdev, is.null))])
selListHist<-names(Sdev$hist[!unlist(lapply(Sdev$hist, is.null))])
selListPro<-names(Sdev$pro[!unlist(lapply(Sdev$pro, is.null))])
LHList
selListHist
selListPro
ProFisheryObj_TMP<-ProFisheryObj
ProFisheryObj_TMP
NROW(selListHist)
NROW(selListPro)
x<-1
slot(HistFisheryObj_TMP, selListHist[x])
slot(ProFisheryObj_TMP, selListPro[x])
Sdev$hist[[selListHist[x]]][k,]
k<-1
Sdev$hist[[selListHist[x]]][k,]
Sdev$pro[[selListPro[x]]]
Sdev$pro[[selListPro[x]]][k,]
ProFisheryObj_TMP<-ProFisheryObj
if(NROW(selListPro) > 0){
for(x in 1:NROW(selListPro)) slot(ProFisheryObj_TMP, selListPro[x]) <- Sdev$pro[[selListPro[x]]][k,]
}
ProFisheryObj_TMP
TimeAreaObj@iterations
#LH
LifeHistoryObj_TMP<-LifeHistoryObj
if(NROW(LHList) > 0) {
for(x in 1:NROW(LHList)) slot(LifeHistoryObj_TMP, LHList[x]) <- LHdev[[LHList[x]]][k]
}
#sel
HistFisheryObj_TMP<-HistFisheryObj
if(NROW(selListHist) > 0){
for(x in 1:NROW(selListHist)) slot(HistFisheryObj_TMP, selListHist[x]) <- Sdev$hist[[selListHist[x]]][k,]
}
ProFisheryObj_TMP<-ProFisheryObj
if(NROW(selListPro) > 0){
for(x in 1:NROW(selListPro)) slot(ProFisheryObj_TMP, selListPro[x]) <- Sdev$pro[[selListPro[x]]][k,]
}
lh<-LHwrapper(LifeHistoryObj_TMP, TimeAreaObj)
lh<-LHwrapper(LifeHistoryObj_TMP, TimeAreaObj)
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj_TMP, doPlot = FALSE)
selPro<-selWrapper(lh, TimeAreaObj, FisheryObj = ProFisheryObj_TMP, doPlot = FALSE)
is.null(lh)
is.null(selHist)
isTRUE(!is.null(StrategyObj) &  is.null(selPro))
selPro
5930.00/7455.79
5700.00/7440.78
5740*0.05
5740*0.025
143.5*1.24
88/30
devtools::load_all()
#---Populate LifeHistory object
#---Contains the life history parameters
LifeHistoryObj <- new("LifeHistory")
LifeHistoryObj@title<-"Hawaiian Uhu - Parrotfish"
LifeHistoryObj@speciesName<-"Chlorurus perspicillatus"
LifeHistoryObj@Linf<-53.2
LifeHistoryObj@K<-0.225
LifeHistoryObj@t0<- -1.48
LifeHistoryObj@L50<-35
LifeHistoryObj@L95<-35*1.15
LifeHistoryObj@M<-0.16
LifeHistoryObj@L_type<-"FL"
LifeHistoryObj@L_units<-"cm"
LifeHistoryObj@LW_A<-0.0136
LifeHistoryObj@LW_B<-3.109
LifeHistoryObj@Steep<-0.6
LifeHistoryObj@isHermaph<-TRUE
LifeHistoryObj@H50<-46.2
LifeHistoryObj@H95delta<-11.8
LifeHistoryObj@recSD<-0 #Run with no rec var'n to see deterministic trends
#---Populate a TimeArea object
#---Contains basic inputs about time and space needed to establish simulation bounds
#---The effort matrix is set as multipliers of initial equilibrium effort
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Example"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 3
TimeAreaObj@historicalYears = 10
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow = 10, ncol = 2, byrow = FALSE)
#---Pupulate a Fishery object
#---Contains selectivity, retention and discard characteristics
#---Not sure how to set this up? Type ?selWrapper
HistFisheryObj<-new("Fishery")
HistFisheryObj@title<-"Example"
HistFisheryObj@vulType<-"logistic"
HistFisheryObj@vulParams<-c(40.1,0.1) #Approx. knife edge based on input value of 40.1. Must put slightly higher value for second parameter
HistFisheryObj@retType<-"full"
HistFisheryObj@retMax <- 1
HistFisheryObj@Dmort <- 0
#-----------------------------
#Setup stochastic object
#-----------------------------
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-FALSE
#---In this test, we are going to introduce a size limit of 35.6 cm. Ideally, size limits should be set as changes in retention, not the selectivity of the gear
#---Thus we retain the same selectivity of the historical fishery, and simply change retention
#---You should immediately notice a problem here. As selectivity does not really occur until 40 cm, while we are setting a size limit 35.6 cm (14 inches)
ProFisheryObj<-new("Fishery")
ProFisheryObj@title<-"Example"
ProFisheryObj@vulType<-"logistic"
ProFisheryObj@vulParams<-c(40.1,0.1) #Approx. knife edge based on input value of 40.1. Must put slightly higher value for second parameter
ProFisheryObj@retType<-"logistic"
ProFisheryObj@retParams <- c(35.6, 0.1)
ProFisheryObj@retMax <- 1
ProFisheryObj@Dmort <- 0
#---The Strategy object informs the simulation that you'd like to do a projection
#---The stratgy object is used to specify effort changes (e.g. effort reduction strategies), bag limits, and spatial closures (e.g., by setting effort to 0 in a given area)
#---Since we are not modifying any of these options, we just need to create a placeholder. We will assume effort will be constant into the foreseeable future
#---The effort matrix of a Strategy object is set as a multiplier of fishing mortality in the terminal year of the historical time period - or initial eq. if no historical period specified
StrategyObj <- new("Strategy")
StrategyObj@projectionYears <- 50
StrategyObj@projectionName<-"projectionStrategy"
StrategyObj@projectionParams<-list(bag = c(-99, -99), effort = matrix(1:1, nrow=50, ncol=2, byrow = FALSE))
runProjection(LifeHistoryObj = LifeHistoryObj,
TimeAreaObj = TimeAreaObj,
HistFisheryObj = HistFisheryObj,
ProFisheryObj = ProFisheryObj,
StrategyObj = StrategyObj,
StochasticObj = StochasticObj,
wd = here(),
fileName = "Test1",
doPlot = TRUE,
titleStrategy = "Test1"
)
X<-readProjection(wd = here(),
fileName = "Test1"
)
renv::status()
renv::snapshot
renv::snapshot()
devtools::check()
#Life history
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample@Linf<-100
LifeHistoryExample@L50<-66
LifeHistoryExample@L95delta<-1
LifeHistoryExample@MK<-1.5
LifeHistoryExample@LW_A<-0.01
LifeHistoryExample@LW_B<-3
LifeHistoryExample@title<-"Example fish"
LifeHistoryExample@shortDescription<-"Simulated life history of a fish based on B-H invariants"
LifeHistoryExample@speciesName<-"Example fish"
LifeHistoryExample@L_type<-"TL"
LifeHistoryExample@L_units<-"cm"
LifeHistoryExample@Walpha_units<-"g"
LifeHistoryExample@K<-0.2
LifeHistoryExample@M<-0.3
LifeHistoryExample@t0<-0
LifeHistoryExample@Tmax<- floor(-log(0.01)/0.3)
LifeHistoryExample@Steep<-0.99
LifeHistoryExample@R0<-1000
LifeHistoryExample@recSD<-0.6
LifeHistoryExample@recRho<-0
LifeHistoryExample@isHermaph<-FALSE
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
lbsprSimExample
usethis::use_data(lbsprSimExample, overwrite = TRUE)
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
gtgSimExample<-gtgYPRWrapper(LifeHistoryExample)
gtgSimExample
usethis::use_data(gtgSimExample, overwrite = TRUE)
devtools::check()
#Life history
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample@Linf<-100
LifeHistoryExample@L50<-66
LifeHistoryExample@L95delta<-1
LifeHistoryExample@MK<-1.5
LifeHistoryExample@LW_A<-0.01
LifeHistoryExample@LW_B<-3
LifeHistoryExample@title<-"Example fish"
LifeHistoryExample@shortDescription<-"Simulated life history of a fish based on B-H invariants"
LifeHistoryExample@speciesName<-"Example fish"
LifeHistoryExample@L_type<-"TL"
LifeHistoryExample@L_units<-"cm"
LifeHistoryExample@Walpha_units<-"g"
LifeHistoryExample@K<-0.2
LifeHistoryExample@M<-0.3
LifeHistoryExample@t0<-0
LifeHistoryExample@Tmax<- floor(-log(0.01)/0.3)
LifeHistoryExample@Steep<-0.99
LifeHistoryExample@R0<-1000
LifeHistoryExample@recSD<-0.6
LifeHistoryExample@recRho<-0
LifeHistoryExample@isHermaph<-FALSE
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
#Use life history in YPR sim examples
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
gtgSimExample<-gtgYPRWrapper(LifeHistoryExample)
usethis::use_data(gtgSimExample, overwrite = TRUE)
devtools::check()
devtools::load_all()
library(here)
#----------------------------
#Create a LifeHistory object
#----------------------------
#---Populate LifeHistory object
#---Contains the life history parameters
LifeHistoryObj <- new("LifeHistory")
LifeHistoryObj@title<-"Hawaiian Uhu - Parrotfish"
LifeHistoryObj@speciesName<-"Chlorurus perspicillatus"
LifeHistoryObj@Linf<-53.2
LifeHistoryObj@K<-0.225
LifeHistoryObj@t0<- -1.48
LifeHistoryObj@L50<-35
LifeHistoryObj@L95<-35*1.15
LifeHistoryObj@M<-0.16
LifeHistoryObj@L_type<-"FL"
LifeHistoryObj@L_units<-"cm"
LifeHistoryObj@LW_A<-0.0136
LifeHistoryObj@LW_B<-3.109
LifeHistoryObj@Steep<-0.6
LifeHistoryObj@isHermaph<-TRUE
LifeHistoryObj@H50<-46.2
LifeHistoryObj@H95delta<-11.8
LifeHistoryObj@recSD<-0 #Run with no rec var'n to see deterministic trends
#---Populate a TimeArea object
#---Contains basic inputs about time and space needed to establish simulation bounds
#---The effort matrix is set as multipliers of initial equilibrium effort
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Example"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 3
TimeAreaObj@historicalYears = 10
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow = 10, ncol = 2, byrow = FALSE)
#---Pupulate a Fishery object
#---Contains selectivity, retention and discard characteristics
#---Not sure how to set this up? Type ?selWrapper
HistFisheryObj<-new("Fishery")
HistFisheryObj@title<-"Example"
HistFisheryObj@vulType<-"logistic"
HistFisheryObj@vulParams<-c(40.1,0.1) #Approx. knife edge based on input value of 40.1. Must put slightly higher value for second parameter
HistFisheryObj@retType<-"full"
HistFisheryObj@retMax <- 1
HistFisheryObj@Dmort <- 0
#-----------------------------
#Setup stochastic object
#-----------------------------
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.3, 0.6)
StochasticObj@historicalCPUE = c(1,2) #This is used in bag limit projection, see Batch_projection_example
StochasticObj@historicalCPUEType = "vulN"
StochasticObj@Linf<-c(43.2,63.2)
StochasticObj@histFisheryDmort<-matrix(c(0,2), nrow=2, byrow = TRUE)
StochasticObj@proFisheryDmort<-matrix(c(0,1), nrow=2, byrow = TRUE)
StochasticObj@sameFisheryDmort<-FALSE
#---In this test, we are going to introduce a size limit of 35.6 cm. Ideally, size limits should be set as changes in retention, not the selectivity of the gear
#---Thus we retain the same selectivity of the historical fishery, and simply change retention
#---You should immediately notice a problem here. As selectivity does not really occur until 40 cm, while we are setting a size limit 35.6 cm (14 inches)
ProFisheryObj<-new("Fishery")
ProFisheryObj@title<-"Example"
ProFisheryObj@vulType<-"logistic"
ProFisheryObj@vulParams<-c(40.1,0.1) #Approx. knife edge based on input value of 40.1. Must put slightly higher value for second parameter
ProFisheryObj@retType<-"logistic"
ProFisheryObj@retParams <- c(35.6, 0.1)
ProFisheryObj@retMax <- 1
ProFisheryObj@Dmort <- 0
StrategyObj <- new("Strategy")
StrategyObj@projectionYears <- 50
StrategyObj@projectionName<-"projectionStrategy"
StrategyObj@projectionParams<-list(bag = c(-99, -99), effort = matrix(1:1, nrow=50, ncol=2, byrow = FALSE))
runProjection(LifeHistoryObj = LifeHistoryObj,
TimeAreaObj = TimeAreaObj,
HistFisheryObj = HistFisheryObj,
ProFisheryObj = ProFisheryObj,
StrategyObj = StrategyObj,
StochasticObj = StochasticObj,
wd = here(),
fileName = "Test1",
doPlot = TRUE,
titleStrategy = "Test1"
)
devtools::check()
?png
devtools::load_all()
runProjection(LifeHistoryObj = LifeHistoryObj,
TimeAreaObj = TimeAreaObj,
HistFisheryObj = HistFisheryObj,
ProFisheryObj = ProFisheryObj,
StrategyObj = StrategyObj,
StochasticObj = StochasticObj,
wd = here(),
fileName = "Test1",
doPlot = TRUE,
titleStrategy = "Test1"
)
devtools::check()
devtools::check()
