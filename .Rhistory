gtg=13
stepsPerYear=12
!is.numeric(LcStep) ||
!is.numeric(F_MStep) ||
LcStep < 0 ||
F_MStep < 0 ||
class(LifeHistoryObj) != "LifeHistory"
#----------------------------------------------------------
#LH assumptions
#If certain params not provided, then assumptions are made.
#Same assumptions are made as in LBSPRsim for compatability
#-----------------------------------------------------------
if(length(LifeHistoryObj@Steep) == 0) LifeHistoryObj@Steep<-0.7
if(LifeHistoryObj@Steep < 0.2) LifeHistoryObj@Steep<-0.7
if(LifeHistoryObj@Steep > 1.0) LifeHistoryObj@Steep<-0.7
if(length(LifeHistoryObj@LW_A) == 0) LifeHistoryObj@LW_A<-1e-04
if(length(LifeHistoryObj@LW_B) == 0) LifeHistoryObj@LW_B<-3
if(length(LifeHistoryObj@R0) == 0) LifeHistoryObj@R0<-10000
lh<-LHwrapper(LifeHistoryObj, TimeAreaObj)
#----------------------------------------------------------
#LH assumptions
#If certain params not provided, then assumptions are made.
#Same assumptions are made as in LBSPRsim for compatability
#-----------------------------------------------------------
if(length(LifeHistoryObj@Steep) == 0) LifeHistoryObj@Steep<-0.7
if(LifeHistoryObj@Steep < 0.2) LifeHistoryObj@Steep<-0.7
if(LifeHistoryObj@Steep > 1.0) LifeHistoryObj@Steep<-0.7
if(length(LifeHistoryObj@LW_A) == 0) LifeHistoryObj@LW_A<-1e-04
if(length(LifeHistoryObj@LW_B) == 0) LifeHistoryObj@LW_B<-3
if(length(LifeHistoryObj@R0) == 0) LifeHistoryObj@R0<-10000
#------------------
#Eumetric analysis
#------------------
FisheryObj<-new("Fishery")
FisheryObj@historicalVulType<-"logistic"
FisheryObj@historicalRetType<-"full"
FisheryObj@historicalRetMax<-1.0
FisheryObj@historicalDmort<-0.0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@gtg<-gtg
TimeAreaObj@stepsPerYear<-stepsPerYear
Lmax<-(1 - 0.01^(1/(LifeHistoryObj@M/LifeHistoryObj@K))) * LifeHistoryObj@Linf
Lc<-seq(floor(0.1*Lmax),  floor(Lmax), LcStep)
F_M<-round(seq(0, 4, F_MStep), 3)
SPR_EU<-matrix(nrow=NROW(F_M), ncol=NROW(Lc))
YPR_EU<-matrix(nrow=NROW(F_M), ncol=NROW(Lc))
Yield_EU<-matrix(nrow=NROW(F_M), ncol=NROW(Lc))
#------
#Get lh
#------
lh<-LHwrapper(LifeHistoryObj, TimeAreaObj)
show_condition <- function(code) {
tryCatch({
code
},
error = function(c) NULL
)
}
steps<-NROW(Lc)*NROW(F_M)
counter <- 0
stop = FALSE
if(!is.null(hostName) & !is.null(waitName)){
waitName$show()
}
for (j in 1:NROW(Lc)){
FisheryObj@historicalVulParams<-c(Lc[j], Lc[j]+1)
sel<-selWrapper(LifeHistoryObj, TimeAreaObj, FisheryObj, doProjection = FALSE, doPlot = FALSE)
for (i in 1:NROW(F_M)){
Feq<-F_M[i]*LifeHistoryObj@M
tmpSim<-show_condition(solveDFast(lh = lh, sel=sel, doFit = FALSE, F_in = Feq))
if(is.null(tmpSim)[1]) {
stop = TRUE
break
}
SPR_EU[i,j]=tmpSim$SPR
YPR_EU[i,j]=tmpSim$YPR
Yield_EU[i,j]=tmpSim$catchB
counter<-counter+1
if(!is.null(hostName) & !is.null(waitName)){
hostName$set(counter/steps*100)
}
}
if(stop) break
}
devtools::load_all()
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=13, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
#LH
lh<-LifeHistoryExample
lh@MK<-0.5
lh@M<-0.1
lh@K<-0.2
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=13, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim<-lbsprSimWrapper(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim2<-lbsprSimWrapperAbsel(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim3<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=13, stepsPerYear = 1)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
#YPR
plot(sim@sim$F_M, sim@sim$YPR_EU[,20]/max(sim@sim$YPR_EU), type="l", col="red")
lines(sim2@sim$F_M, sim2@sim$YPR_EU[,20]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$F_M, sim3@sim$YPR_EU[,20]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$YPR_EU[,20]/max(sim4@sim$YPR_EU), col="orange")
#Yield
plot(sim@sim$F_M, sim@sim$Yield_EU[,50], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$Yield_EU[,50], col="blue")
lines(sim3@sim$F_M, sim3@sim$Yield_EU[,50]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$Yield_EU[,50]/max(sim4@sim$Yield_EU), col="orange")
#SPR
plot(sim@sim$F_M, sim@sim$SPR_EU[,20], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$SPR_EU[,20], col="blue")
lines(sim3@sim$F_M, sim3@sim$SPR_EU[,20], col="green")
lines(sim4@sim$F_M, sim4@sim$SPR_EU[,20], col="orange")
#YPR
plot(sim@sim$Lc, sim@sim$YPR_EU[15,]/max(sim@sim$YPR_EU), type="l", col="red", ylim = c(0,1))
lines(sim2@sim$Lc, sim2@sim$YPR_EU[15,]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$Lc, sim3@sim$YPR_EU[15,]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$YPR_EU[15,]/max(sim4@sim$YPR_EU), col="orange")
#Yield
plot(sim@sim$Lc, sim@sim$Yield_EU[3,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$Yield_EU[3,], col="blue")
lines(sim3@sim$Lc, sim3@sim$Yield_EU[3,]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$Yield_EU[3,]/max(sim4@sim$Yield_EU), col="orange")
#YPR
plot(sim@sim$Lc, sim@sim$YPR_EU[3,]/max(sim@sim$YPR_EU), type="l", col="red", ylim = c(0,1))
lines(sim2@sim$Lc, sim2@sim$YPR_EU[3,]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$Lc, sim3@sim$YPR_EU[3,]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$YPR_EU[3,]/max(sim4@sim$YPR_EU), col="orange")
#LH
lh<-LifeHistoryExample
lh@MK<-3
lh@M<-0.3
lh@K<-0.1
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ptm<-proc.time()
sim<-lbsprSimWrapper(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim2<-lbsprSimWrapperAbsel(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim3<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=13, stepsPerYear = 1)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=13, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
#YPR
plot(sim@sim$F_M, sim@sim$YPR_EU[,20]/max(sim@sim$YPR_EU), type="l", col="red")
lines(sim2@sim$F_M, sim2@sim$YPR_EU[,20]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$F_M, sim3@sim$YPR_EU[,20]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$YPR_EU[,20]/max(sim4@sim$YPR_EU), col="orange")
#YPR
plot(sim@sim$F_M, sim@sim$YPR_EU[,50]/max(sim@sim$YPR_EU), type="l", col="red")
lines(sim2@sim$F_M, sim2@sim$YPR_EU[,50]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$F_M, sim3@sim$YPR_EU[,50]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$YPR_EU[,50]/max(sim4@sim$YPR_EU), col="orange")
plot(sim@sim$F_M, sim@sim$YPR_EU[,70]/max(sim@sim$YPR_EU), type="l", col="red")
lines(sim2@sim$F_M, sim2@sim$YPR_EU[,70]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$F_M, sim3@sim$YPR_EU[,70]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$YPR_EU[,70]/max(sim4@sim$YPR_EU), col="orange")
#Yield
plot(sim@sim$F_M, sim@sim$Yield_EU[,50], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$Yield_EU[,50], col="blue")
lines(sim3@sim$F_M, sim3@sim$Yield_EU[,50]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$Yield_EU[,50]/max(sim4@sim$Yield_EU), col="orange")
#Yield
plot(sim@sim$F_M, sim@sim$Yield_EU[,20], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$Yield_EU[,20], col="blue")
lines(sim3@sim$F_M, sim3@sim$Yield_EU[,20]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$Yield_EU[,20]/max(sim4@sim$Yield_EU), col="orange")
#Yield
plot(sim@sim$F_M, sim@sim$Yield_EU[,50], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$Yield_EU[,50], col="blue")
lines(sim3@sim$F_M, sim3@sim$Yield_EU[,50]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$Yield_EU[,50]/max(sim4@sim$Yield_EU), col="orange")
#Yield
plot(sim@sim$F_M, sim@sim$Yield_EU[,70], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$Yield_EU[,70], col="blue")
lines(sim3@sim$F_M, sim3@sim$Yield_EU[,70]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$Yield_EU[,70]/max(sim4@sim$Yield_EU), col="orange")
plot(sim@sim$F_M, sim@sim$SPR_EU[,20], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$SPR_EU[,20], col="blue")
lines(sim3@sim$F_M, sim3@sim$SPR_EU[,20], col="green")
lines(sim4@sim$F_M, sim4@sim$SPR_EU[,20], col="orange")
#SPR
plot(sim@sim$F_M, sim@sim$SPR_EU[,50], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$SPR_EU[,50], col="blue")
lines(sim3@sim$F_M, sim3@sim$SPR_EU[,50], col="green")
lines(sim4@sim$F_M, sim4@sim$SPR_EU[,50], col="orange")
#SPR
plot(sim@sim$F_M, sim@sim$SPR_EU[,70], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$SPR_EU[,70], col="blue")
lines(sim3@sim$F_M, sim3@sim$SPR_EU[,70], col="green")
lines(sim4@sim$F_M, sim4@sim$SPR_EU[,70], col="orange")
plot(sim@sim$Lc, sim@sim$YPR_EU[3,]/max(sim@sim$YPR_EU), type="l", col="red", ylim = c(0,1))
lines(sim2@sim$Lc, sim2@sim$YPR_EU[3,]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$Lc, sim3@sim$YPR_EU[3,]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$YPR_EU[3,]/max(sim4@sim$YPR_EU), col="orange")
plot(sim@sim$Lc, sim@sim$YPR_EU[15,]/max(sim@sim$YPR_EU), type="l", col="red", ylim = c(0,1))
lines(sim2@sim$Lc, sim2@sim$YPR_EU[15,]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$Lc, sim3@sim$YPR_EU[15,]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$YPR_EU[15,]/max(sim4@sim$YPR_EU), col="orange")
plot(sim@sim$Lc, sim@sim$Yield_EU[3,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$Yield_EU[3,], col="blue")
lines(sim3@sim$Lc, sim3@sim$Yield_EU[3,]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$Yield_EU[3,]/max(sim4@sim$Yield_EU), col="orange")
plot(sim@sim$Lc, sim@sim$Yield_EU[15,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$Yield_EU[15,], col="blue")
lines(sim3@sim$Lc, sim3@sim$Yield_EU[15,]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$Yield_EU[15,]/max(sim4@sim$Yield_EU), col="orange")
plot(sim@sim$Lc, sim@sim$SPR_EU[3,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$SPR_EU[3,], col="blue")
lines(sim3@sim$Lc, sim3@sim$SPR_EU[3,], col="green")
lines(sim4@sim$Lc, sim4@sim$SPR_EU[3,], col="orange")
plot(sim@sim$Lc, sim@sim$SPR_EU[15,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$SPR_EU[15,], col="blue")
lines(sim3@sim$Lc, sim3@sim$SPR_EU[15,], col="green")
lines(sim4@sim$Lc, sim4@sim$SPR_EU[15,], col="orange")
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=21, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
plot(sim@sim$F_M, sim@sim$YPR_EU[,70]/max(sim@sim$YPR_EU), type="l", col="red")
lines(sim2@sim$F_M, sim2@sim$YPR_EU[,70]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$F_M, sim3@sim$YPR_EU[,70]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$YPR_EU[,70]/max(sim4@sim$YPR_EU), col="orange")
plot(sim@sim$F_M, sim@sim$Yield_EU[,70], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$Yield_EU[,70], col="blue")
lines(sim3@sim$F_M, sim3@sim$Yield_EU[,70]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$Yield_EU[,70]/max(sim4@sim$Yield_EU), col="orange")
plot(sim@sim$F_M, sim@sim$SPR_EU[,70], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$SPR_EU[,70], col="blue")
lines(sim3@sim$F_M, sim3@sim$SPR_EU[,70], col="green")
lines(sim4@sim$F_M, sim4@sim$SPR_EU[,70], col="orange")
#-
plot(sim@sim$Lc, sim@sim$YPR_EU[15,]/max(sim@sim$YPR_EU), type="l", col="red", ylim = c(0,1))
lines(sim2@sim$Lc, sim2@sim$YPR_EU[15,]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$Lc, sim3@sim$YPR_EU[15,]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$YPR_EU[15,]/max(sim4@sim$YPR_EU), col="orange")
plot(sim@sim$Lc, sim@sim$Yield_EU[15,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$Yield_EU[15,], col="blue")
lines(sim3@sim$Lc, sim3@sim$Yield_EU[15,]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$Yield_EU[15,]/max(sim4@sim$Yield_EU), col="orange")
plot(sim@sim$Lc, sim@sim$SPR_EU[15,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$SPR_EU[15,], col="blue")
lines(sim3@sim$Lc, sim3@sim$SPR_EU[15,], col="green")
lines(sim4@sim$Lc, sim4@sim$SPR_EU[15,], col="orange")
plot(sim@sim$Lc, sim@sim$Yield_EU[15,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$Yield_EU[15,], col="blue")
lines(sim3@sim$Lc, sim3@sim$Yield_EU[15,]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$Yield_EU[15,]/max(sim4@sim$Yield_EU), col="orange")
plot(sim@sim$Lc, sim@sim$YPR_EU[15,]/max(sim@sim$YPR_EU), type="l", col="red", ylim = c(0,1))
lines(sim2@sim$Lc, sim2@sim$YPR_EU[15,]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$Lc, sim3@sim$YPR_EU[15,]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$YPR_EU[15,]/max(sim4@sim$YPR_EU), col="orange")
0.3/0.2
#LH
lh<-LifeHistoryExample
lh@MK<-1.5
lh@M<-0.3
lh@K<-0.2
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ptm<-proc.time()
sim<-lbsprSimWrapper(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim2<-lbsprSimWrapperAbsel(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim3<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=13, stepsPerYear = 1)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=21, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
lh<-LifeHistoryExample
lh@MK<-1.5
lh@M<-0.3
lh@K<-0.2
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=21, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
#LH
lh<-LifeHistoryExample
lh@MK<-3
lh@M<-0.12
lh@K<-0.04
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=21, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
lh<-LifeHistoryExample
lh@MK<-0.5
lh@M<-0.1
lh@K<-0.2
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=21, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@historicalVulType<-"logistic"
FisheryObj@historicalVulParams<-c(50,75)
FisheryObj@historicalRetType<-"full"
FisheryObj@historicalRetParams<-c(60,70)
FisheryObj@historicalRetMax<-1
FisheryObj@historicalDmort<-0
ta<-new("TimeArea")
ta@gtg<-13
ta@stepsPerYear<-12
lh<-LHwrapper(LifeHistoryObj=LifeHistoryExample, ta)
sel<-selWrapper(LifeHistoryObj=LifeHistoryExample, TimeAreaObj = ta, FisheryObj = FisheryObj, doProjection = TRUE, doPlot = TRUE)
lh
sel
solveD(lh, sel, doFit = FALSE, F_in = 0, doPlot = TRUE)
devtools::load_all()
lh<-LifeHistoryExample
lh@MK<-2
lh@M<-0.2
lh@K<-0.1
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ta<-new("TimeArea")
ta@gtg<-13
ta@stepsPerYear<-12
ptm<-proc.time()
x<-LHwrapper(LifeHistoryObj = lh, TimeAreaObj=ta)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
#----------------------------------
#Demonstrate selectivity plotting
#-----------------------------------
lh<-LifeHistoryExample
lh@MK<-2
lh@M<-0.2
lh@K<-0.1
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@historicalVulType<-"logistic"
FisheryObj@historicalVulParams<-c(50,75)
FisheryObj@historicalRetType<-"slotLimit"
FisheryObj@historicalRetParams<-c(60,70)
FisheryObj@historicalRetMax<-1
FisheryObj@historicalDmort<-0.1
FisheryObj@projectionVulType<-"logistic"
FisheryObj@projectionVulParams<-c(50,75)
FisheryObj@projectionRetType<-"full"
FisheryObj@projectionRetMax<-0.5
FisheryObj@projectionDmort<-0
ta<-new("TimeArea")
ta@gtg<-13
ta@stepsPerYear<-1
X<-selWrapper(LifeHistoryObj=lh, TimeAreaObj = ta, FisheryObj = FisheryObj, doProjection = TRUE, doPlot = TRUE)
#----------------------------------
#Demonstrate selectivity plotting
#-----------------------------------
lh<-LifeHistoryExample
lh@MK<-2
lh@M<-0.2
lh@K<-0.1
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@historicalVulType<-"logistic"
FisheryObj@historicalVulParams<-c(50,75)
FisheryObj@historicalRetType<-"slotLimit"
FisheryObj@historicalRetParams<-c(60,70)
FisheryObj@historicalRetMax<-1
FisheryObj@historicalDmort<-0.1
FisheryObj@projectionVulType<-"logistic"
FisheryObj@projectionVulParams<-c(50,75)
FisheryObj@projectionRetType<-"full"
FisheryObj@projectionRetMax<-0.5
FisheryObj@projectionDmort<-0
ta<-new("TimeArea")
ta@gtg<-13
ta@stepsPerYear<-1
X<-selWrapper(LifeHistoryObj=lh, TimeAreaObj = ta, FisheryObj = FisheryObj, doProjection = TRUE, doPlot = TRUE)
#----------------------------------------
#Demonstrate plotting function of solveD
#----------------------------------------
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@historicalVulType<-"logistic"
FisheryObj@historicalVulParams<-c(50,75)
FisheryObj@historicalRetType<-"full"
FisheryObj@historicalRetParams<-c(60,70)
FisheryObj@historicalRetMax<-1
FisheryObj@historicalDmort<-0
ta<-new("TimeArea")
ta@gtg<-13
ta@stepsPerYear<-12
lh<-LHwrapper(LifeHistoryObj=LifeHistoryExample, ta)
sel<-selWrapper(LifeHistoryObj=LifeHistoryExample, TimeAreaObj = ta, FisheryObj = FisheryObj, doProjection = TRUE, doPlot = TRUE)
solveD(lh, sel, doFit = FALSE, F_in = 0, doPlot = TRUE)
#---------------------
#Comparing YPR curves
#---------------------
#LH
lh<-LifeHistoryExample
lh@MK<-0.5
lh@M<-0.1
lh@K<-0.2
lh@Tmax<-1 #Keeping this set at 1 will override Tmax and use -log(0.01)/M for max age
ptm<-proc.time()
sim<-lbsprSimWrapper(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim2<-lbsprSimWrapperAbsel(LifeHistoryObj = lh)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim3<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=13, stepsPerYear = 1)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
ptm<-proc.time()
sim4<-gtgYPRWrapper(LifeHistoryObj = lh, gtg=21, stepsPerYear = 12)
print("Time in minutes: ")
print((proc.time()-ptm)/60)
#YPR
plot(sim@sim$F_M, sim@sim$YPR_EU[,70]/max(sim@sim$YPR_EU), type="l", col="red")
lines(sim2@sim$F_M, sim2@sim$YPR_EU[,70]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$F_M, sim3@sim$YPR_EU[,70]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$YPR_EU[,70]/max(sim4@sim$YPR_EU), col="orange")
#Yie
#Yield
plot(sim@sim$F_M, sim@sim$Yield_EU[,70], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$Yield_EU[,70], col="blue")
lines(sim3@sim$F_M, sim3@sim$Yield_EU[,70]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$F_M, sim4@sim$Yield_EU[,70]/max(sim4@sim$Yield_EU), col="orange")
#SPR
plot(sim@sim$F_M, sim@sim$SPR_EU[,70], type="l", col="red", main = "0.01")
lines(sim2@sim$F_M, sim2@sim$SPR_EU[,70], col="blue")
lines(sim3@sim$F_M, sim3@sim$SPR_EU[,70], col="green")
lines(sim4@sim$F_M, sim4@sim$SPR_EU[,70], col="orange")
plot(sim@sim$Lc, sim@sim$YPR_EU[15,]/max(sim@sim$YPR_EU), type="l", col="red", ylim = c(0,1))
lines(sim2@sim$Lc, sim2@sim$YPR_EU[15,]/max(sim2@sim$YPR_EU), col="blue")
lines(sim3@sim$Lc, sim3@sim$YPR_EU[15,]/max(sim3@sim$YPR_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$YPR_EU[15,]/max(sim4@sim$YPR_EU), col="orange")
plot(sim@sim$Lc, sim@sim$Yield_EU[15,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$Yield_EU[15,], col="blue")
lines(sim3@sim$Lc, sim3@sim$Yield_EU[15,]/max(sim3@sim$Yield_EU), col="green")
lines(sim4@sim$Lc, sim4@sim$Yield_EU[15,]/max(sim4@sim$Yield_EU), col="orange")
plot(sim@sim$Lc, sim@sim$SPR_EU[15,], type="l", col="red", main = "0.01")
lines(sim2@sim$Lc, sim2@sim$SPR_EU[15,], col="blue")
lines(sim3@sim$Lc, sim3@sim$SPR_EU[15,], col="green")
lines(sim4@sim$Lc, sim4@sim$SPR_EU[15,], col="orange")
#-----------------------
#Test spinner for Shiny
#-----------------------
library(shiny)
library(waiter)
library(fishSimGTG)
ui <- fluidPage(
useWaiter(),
useHostess(), # include dependencies
actionButton("btn", "render"),
)
server <- function(input, output){
host <- Hostess$new()
w <- Waiter$new(
html = host$get_loader(
preset = "bubble",
text_color = "black",
center_page = TRUE,
class = "",
min = 0,
max = 100,
svg = NULL,
progress_type = "fill",
fill_direction = c("btt", "ttb", "ltr", "rtl"),
stroke_direction = c("normal", "reverse"),
fill_color = NULL,
stroke_color = "pink"
),
color = transparent(alpha = 0.2),
fadeout = TRUE
)
w$show()
gtgYPRWrapper(LifeHistoryObj = LifeHistoryExample, waitName=w, hostName=host)
w$hide()
}
shinyApp(ui, server)
devtools::check()
devtools::check()
devtools::document()
devtools::check()
