LifeHistoryExample@isHermaph<-FALSE
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
LH_to_dataframe(LifeHistoryExample)
?slot
devtools::load_all()
library(LBSPR)
X<-new(LifeHistory)
X<-new("LifeHistory")
slot(X, Linf)
slot(X, "Linf")
getSlots(X)
slotNames(X)
devtools:check()
devtools::check()
devtools::load_all()
library(LBSPR)
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample@Linf<-100
LifeHistoryExample@L50<-66
LifeHistoryExample@L95<-67
LifeHistoryExample@MK<-1.5
LifeHistoryExample@LW_A<-0.01
LifeHistoryExample@LW_B<-3
LifeHistoryExample@title<-"Example fish"
LifeHistoryExample@shortDescription<-"Simulated life history of a fish based on B-H invariants"
LifeHistoryExample@speciesName<-"Example fish"
LifeHistoryExample@L_type<-"TL"
LifeHistoryExample@L_units<-"cm"
LifeHistoryExample@Walpha_units<-"g"
LifeHistoryExample@K<-0.2
LifeHistoryExample@M<-0.3
LifeHistoryExample@t0<-0
LifeHistoryExample@Tmax<- floor(-log(0.01)/0.3)
LifeHistoryExample@Steep<-0.99
LifeHistoryExample@R0<-1000
LifeHistoryExample@recSD<-0.6
LifeHistoryExample@recRho<-0
LifeHistoryExample@isHermaph<-FALSE
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
devtools::check()
devtools::load_all()
library(LBSPR)
LifeHistoryExample
devtools::check()
devtools::check()
setClass("LifeHistory",
representation(
title = "character",
speciesName = "character",
shortDescription = "character",
L_type = "character",
L_units = "character",
Walpha_units = "character",
Linf = "numeric",
K =  "numeric",
t0 = "numeric",
L50 = "numeric",
L95 = "numeric",
M =  "numeric",
MK = "numeric",
LW_A = "numeric",
LW_B = "numeric",
Tmax = "numeric",
Steep = "numeric",
R0 = "numeric",
recSD = "numeric",
recRho = "numeric",
isHermaph = "logical",
H50 = "numeric",
H95 = "numeric",
author = "character",
authAffiliation = "character",
longDescription = "character",
appBuild = "data.frame",
ID = "character")
)
X<-new("LifeHistory")
X
setClass("LifeHistory",
representation(
title = "character",
speciesName = "character",
shortDescription = "character",
L_type = "character",
L_units = "character",
Walpha_units = "character",
Linf = "numeric",
K =  "numeric",
t0 = "numeric",
L50 = "numeric",
L95 = "numeric",
M =  "numeric",
MK = "numeric",
LW_A = "numeric",
LW_B = "numeric",
Tmax = "numeric",
Steep = "numeric",
R0 = "numeric",
recSD = "numeric",
recRho = "numeric",
isHermaph = "logical",
H50 = "numeric",
H95 = "numeric",
author = "character",
authAffiliation = "character",
longDescription = "character",
appBuild = "data.frame",
ID = "character",
geography = "character")
)
X
X
x<-""
nchar(x)
setClass("LifeHistory",
representation(
title = "character",
speciesName = "character",
shortDescription = "character",
L_type = "character",
L_units = "character",
Walpha_units = "character",
Linf = "numeric",
K =  "numeric",
t0 = "numeric",
L50 = "numeric",
L95 = "numeric",
M =  "numeric",
MK = "numeric",
LW_A = "numeric",
LW_B = "numeric",
Tmax = "numeric",
Steep = "numeric",
R0 = "numeric",
recSD = "numeric",
recRho = "numeric",
isHermaph = "logical",
H50 = "numeric",
H95 = "numeric",
author = "character",
authAffiliation = "character",
longDescription = "character",
appBuild = "data.frame",
ID = "character")
)
X<-new("LifeHistory")
nchar(X@speciesName)
nchar(X@shortDescription)
nchar(X@longDescription)
devtools::load_all()
library(LBSPR)
X<-LifeHistoryExample
X
nchar(X@longDescription)
nchar(X@longDescription) > 0
length(X@longDescription)
length(X@longDescription) && nchar(X@longDescription)
length(X@longDescription) & nchar(X@longDescription)
X
X<-new("LifeHistory")
nchar(X@title)
length(X@title)
X@title<-"test"
length(X@title)
X@title<-""
length(X@title)
nchar(X@title)
X<-new("LifeHistory")
X@speciesName<-"Species name"
paste(X@speciesName, X@title)
paste(X@speciesName, X@title, sep ="|")
?paste
22*1.25
80*90
6*8
7*8
60*110
72*90
24*110
6480+2640
40*90
9120+3600+13200
!TRUE
!FALSE
library(tidyverse)
?across
gdf <-
tibble(g = c(1, 1, 2, 3), v1 = 10:13, v2 = 20:23) %>%
group_by(g)
set.seed(1)
n <- rnorm(1)
gdf %>% mutate(across(v1:v2, ~ .x + n))
gdf
gdf %>% mutate(across(v1:v2, ~ .x / 10))
# Outside: 1 normal variate
n <- rnorm(1)
gdf %>% mutate(across(v1:v2, ~ .x / ifelse(X==3, 10, 1)))
X<-3
# Outside: 1 normal variate
n <- rnorm(1)
gdf %>% mutate(across(v1:v2, ~ .x / ifelse(X==3, 10, 1)))
X<-4
# Outside: 1 normal variate
n <- rnorm(1)
gdf %>% mutate(across(v1:v2, ~ .x / ifelse(X==3, 10, 1)))
gdf %>% mutate(across(v1:v2, "Test"))
gdf %>% mutate(across(v1:v2, rep, "Test"))
gdf %>% mutate(across(v1:v2, rep, ~.x = "Test"))
fishSimGTG::LifeHistoryExample
library(fishSimGTG)
LH_to_dataframe(LifeHistoryExample, display_units = "inches"
)
LH_to_dataframe <- function(LifeHistoryObj, digits=3, display_units = "cm") {
slot(LifeHistoryObj, 'appBuild', check=FALSE) <- NULL
nms <- slotNames(LifeHistoryObj)
lst <- lapply(nms, function(nm) slot(LifeHistoryObj, nm))
ind<-which(lengths(lst)!=0)
if(LifeHistoryObj@L_units == "cm" & display_units == "inches") LifeHistoryObj@L_units<-"inches"
data.frame(setNames(lst[ind], nms[ind])) %>%
mutate(across(any_of(c("Linf","L50", "L95","H50", "H95",)), ~ .x / ifelse(LifeHistoryObj@L_units == "cm" & display_units == "inches", 2.54, 1))) %>%
mutate(across(any_of(c("Linf", "K", "t0", "L50", "L95", "M", "MK", "LW_B", "Steep", "H50", "H95", "recSD", "recRho")), round, digits))  %>%
mutate(across(any_of(c("Tmax", "R0")), round, 1))  %>%
mutate(across(any_of(c("LW_A")), signif, digits))  %>%
rename_with(
~ case_when(
. == "title" ~ "Title",
. == "speciesName" ~ "Species",
. == "shortDescription" ~ "Short description",
. == "L_type" ~ "Length type",
. == "L_units" ~ "Length units",
. == "Walpha_units" ~ "Weight units",
. == "Linf" ~ "von Bertalanffy Loo",
. == "K" ~ "von Bertalanffy K",
. == "t0" ~ "von Bertalanffy t0",
. == "L50" ~ "Length at 50% maturity",
. == "L95" ~ "Length at 95% maturity",
. == "M" ~ "Natural mortality",
. == "MK" ~ "M/K",
. == "LW_A" ~ "Length-weight alpha",
. == "LW_B" ~ "Length-weight beta",
. == "Tmax" ~ "Maximum age",
. == "Steep" ~ "Beverton-Holt steepness",
. == "R0" ~ "Unfished recruitment",
. == "recSD" ~ "Recruitment log-scale standard deviation",
. == "recRho" ~ "Recruitment inter-annual correlation",
. == "isHermaph" ~ "Protogynous hermaphrodite",
. == "H50" ~ "Length at which cohort is 50% male",
. == "H95" ~ "Length at which cohort is 95% male",
. == "author" ~ "Author",
. == "authAffiliation" ~ "Author affiliation",
. == "longDescription" ~ "Long description",
TRUE ~ .
)
) %>%
gather()
}
LH_to_dataframe(LifeHistoryExample, display_units = "inches")
LH_to_dataframe <- function(LifeHistoryObj, digits=3, display_units = "cm") {
slot(LifeHistoryObj, 'appBuild', check=FALSE) <- NULL
nms <- slotNames(LifeHistoryObj)
lst <- lapply(nms, function(nm) slot(LifeHistoryObj, nm))
ind<-which(lengths(lst)!=0)
if(LifeHistoryObj@L_units == "cm" & display_units == "inches") LifeHistoryObj@L_units<-"inches"
data.frame(setNames(lst[ind], nms[ind])) %>%
mutate(across(any_of(c("Linf","L50", "L95","H50", "H95")), ~ .x / ifelse(LifeHistoryObj@L_units == "cm" & display_units == "inches", 2.54, 1))) %>%
mutate(across(any_of(c("Linf", "K", "t0", "L50", "L95", "M", "MK", "LW_B", "Steep", "H50", "H95", "recSD", "recRho")), round, digits))  %>%
mutate(across(any_of(c("Tmax", "R0")), round, 1))  %>%
mutate(across(any_of(c("LW_A")), signif, digits))  %>%
rename_with(
~ case_when(
. == "title" ~ "Title",
. == "speciesName" ~ "Species",
. == "shortDescription" ~ "Short description",
. == "L_type" ~ "Length type",
. == "L_units" ~ "Length units",
. == "Walpha_units" ~ "Weight units",
. == "Linf" ~ "von Bertalanffy Loo",
. == "K" ~ "von Bertalanffy K",
. == "t0" ~ "von Bertalanffy t0",
. == "L50" ~ "Length at 50% maturity",
. == "L95" ~ "Length at 95% maturity",
. == "M" ~ "Natural mortality",
. == "MK" ~ "M/K",
. == "LW_A" ~ "Length-weight alpha",
. == "LW_B" ~ "Length-weight beta",
. == "Tmax" ~ "Maximum age",
. == "Steep" ~ "Beverton-Holt steepness",
. == "R0" ~ "Unfished recruitment",
. == "recSD" ~ "Recruitment log-scale standard deviation",
. == "recRho" ~ "Recruitment inter-annual correlation",
. == "isHermaph" ~ "Protogynous hermaphrodite",
. == "H50" ~ "Length at which cohort is 50% male",
. == "H95" ~ "Length at which cohort is 95% male",
. == "author" ~ "Author",
. == "authAffiliation" ~ "Author affiliation",
. == "longDescription" ~ "Long description",
TRUE ~ .
)
) %>%
gather()
}
LH_to_dataframe(LifeHistoryExample, display_units = "inches")
?tryCatch
tryCatch(1, finally = print("Hello"))
stop(e)
tryCatch(stop(e), finally = print("Hello"))
tryCatch(stop("fred"), finally = print("Hello"))
tryCatch(stop("fred"), error = function(c) NA, finally = print("Hello"))
x<-tryCatch(stop("fred"), error = function(c) NA, finally = print("Hello"))
x
x<-tryCatch(stop("fred"), finally = print("Hello"))
x
rm(x)
x<-tryCatch(stop("fred"), finally = print("Hello"))
x
x<-tryCatch(stop("fred"), error = function(c) NULL, finally = print("Hello"))
x
try('a'+1)
'a+1'
'a'+1
x<-new("LifeHistory")
x@title
length(x@title)
nchar(x@title)
x@title
x@title<-22
x@title<-"22"
length(x@title)
x@title<-NULL
x@title<-NA
x@K
x@K<-NULL
x@K<-NA
length(x@K)
x@K<-1
length(x@K)
x@K<-12313
length(x@K)
nchar(x@K)
x@title<-""
length(x@title)
nchar(x@title)
x@K<-""
x@K<-NA
x@K<-NULL
x@K<-numeric(0)
length(x@K)
nchar(x@K)
x
x@Linf
length(x@Linf)
x@Linf<-NaN
length(x@Linf)
nchar(x@Linf)
is.na(x@Linf)
is.numeric(x@Linf)
150-9.35
24065-5000
75000*1.24
42500/0.8
LifeHistoryObj
devtools::load_all()
LifeHistoryObj<-fishSimGTG::LifeHistoryExample
LifeHistoryObj
LH<-function(LifeHistoryObj){
if(class(LifeHistoryObj) != "LifeHistory" ||
length(LifeHistoryObj@Linf) == 0 ||
length(LifeHistoryObj@L50) == 0 ||
length(LifeHistoryObj@L95) == 0 ||
length(LifeHistoryObj@K) == 0 ||
length(LifeHistoryObj@M) == 0 ||
length(LifeHistoryObj@LW_A) == 0 ||
length(LifeHistoryObj@LW_B) == 0 ||
length(LifeHistoryObj@isHermaph) == 0 ||
LifeHistoryObj@Linf < 0 ||
LifeHistoryObj@L50 < 0 ||
LifeHistoryObj@MK < 0 ||
LifeHistoryObj@L50 >= LifeHistoryObj@Linf ||
LifeHistoryObj@L50 >= LifeHistoryObj@L95
) {
NULL
} else {
#----------------
#How many gtg?
#----------------
gtg<-13
gtg<-ifelse((gtg %% 2) == 0, gtg+1, gtg)
CVLinf<-0.1
maxsd<-2 #number of standard deviations from mean Linf
SDLinf<-LifeHistoryObj@Linf*CVLinf
gtg_Linf <- seq(from = LifeHistoryObj@Linf - maxsd * SDLinf, to = LifeHistoryObj@Linf + maxsd * SDLinf, length.out = gtg)
#---------------
#Age classes
#---------------
if(length(LifeHistoryObj@Tmax) == 0 || LifeHistoryObj@Tmax < 2) {
ages<-seq(1,ceiling(-log(0.01)/LifeHistoryObj@M),1)
} else {
ages<-seq(1,LifeHistoryObj@Tmax,1)
}
#---------------------
#Life history vectors
#---------------------
t0<-ifelse(length(LifeHistoryObj@t0) == 0, 0, LifeHistoryObj@t0)
L<-lapply(gtg_Linf, FUN=function(x) x*(1-exp(-LifeHistoryObj@K*(ages-t0))))
W<-lapply(1:gtg, FUN=function(x) LifeHistoryObj@LW_A*L[[x]]^LifeHistoryObj@LW_B)
#Maturity (Lee's phenomenon)
L50_Linf<-LifeHistoryObj@L50/LifeHistoryObj@Linf
L95_Linf<-LifeHistoryObj@L95/LifeHistoryObj@Linf
gtgL50<-L50_Linf*gtg_Linf
gtgL95<-L95_Linf*gtg_Linf
#Hermaph (Lee's phenomenon?)
H50_Linf<-LifeHistoryObj@H50/LifeHistoryObj@Linf
H95_Linf<-LifeHistoryObj@H95/LifeHistoryObj@Linf
gtgH50<-H50_Linf*gtg_Linf
gtgH95<-H95_Linf*gtg_Linf
mat<-list()
for (l in 1:gtg){
if(LifeHistoryObj@isHermaph){
s<--(gtgH95[l]-gtgH50[l])/log(1/0.95-1)
propFemale<-(1-plogis(L[[l]], location=gtgH50[l], scale=s))
} else {
propFemale<-0.5
}
s<--(gtgL95[l]-gtgL50[l])/log(1/0.95-1)
mat[[l]]<-plogis(L[[l]], location=gtgL50[l], scale=s)*propFemale
}
return(list(
LifeHistory = LifeHistoryObj,
W=W,
mat=mat,
L=L,
maxAge=ages[NROW(ages)]))
}
}
lh<-LH(LifeHistoryObj)
lh$L[[1]]
L<-lh$L[[1]]
s<--(65-30)/log(1/0.95-1)
mat]<-plogis(L, location=30, scale=s)
L<-lh$L[[1]]
s<--(65-30)/log(1/0.95-1)
mat<-plogis(L, location=30, scale=s)
plot(L, mat, type = "l", col = "purple")
s<--(45-30)/log(1/0.95-1)
mat<-plogis(L, location=30, scale=s)
plot(L, mat, type = "l", col = "purple")
L<-lh$L[[1]]
s<--(45-30)/log(1/0.95-1)
Vul<-plogis(L, location=30, scale=s)
plot(L, Vul, type = "l", col = "purple")
s<--(31-30)/log(1/0.95-1)
Ret<-plogis(L, location=30, scale=s)
lines(L, Ret, type = "l", col = "purple")
s<--(45-30)/log(1/0.95-1)
Vul<-plogis(L, location=30, scale=s)
plot(L, Vul, type = "l", col = "purple")
s<--(31-30)/log(1/0.95-1)
Ret<-plogis(L, location=30, scale=s)
lines(L, Ret, type = "l", col = "blue")
s<--(45-30)/log(1/0.95-1)
Vul<-plogis(L, location=30, scale=s)
plot(L, Vul, type = "l", col = "purple", ylim = c(0,1))
s<--(31-30)/log(1/0.95-1)
Ret<-plogis(L, location=30, scale=s)
lines(L, Ret, type = "l", col = "blue")
Land<-Vul*ret
ines(L, Land, type = "l", col = "yellow")
Land<-Vul*ret
lines(L, Land, type = "l", col = "yellow")
Land<-Vul*Ret
lines(L, Land, type = "l", col = "yellow")
s<--(45-30)/log(1/0.95-1)
Vul<-plogis(L, location=30, scale=s)
plot(L, Vul, type = "l", col = "purple", ylim = c(0,1))
s<--(31-30)/log(1/0.95-1)
Ret<-plogis(L, location=30, scale=s)
lines(L, Ret, type = "l", col = "blue")
Land<-Vul*Ret
lines(L, Land, type = "l", col = "green")
Dead<-Vul*(Ret + (1-Ret)*0.2)
lines(L, Dead, type = "l", col = "yellow")
gtg<-13
gtg<-ifelse((gtg %% 2) == 0, gtg+1, gtg)
CVLinf<-0.1
maxsd<-2 #number of standard deviations from mean Linf
SDLinf<-LifeHistoryObj@Linf*CVLinf
gtg_Linf <- seq(from = LifeHistoryObj@Linf - maxsd * SDLinf, to = LifeHistoryObj@Linf + maxsd * SDLinf, length.out = gtg)
LifeHistoryObj@Linf
SDLinf
gtg_Linf
recProb<-dnorm(gtg_Linf, mean = LifeHistoryObj@Linf, sd = SDLinf)
recProb
recProb<-recProb/sum(recProb)
recProb
sum(recProb)
devtools::load_all()
devtools::load_all()
devtools::load_all()
?LH
?LifeHistoryExample
devtools::check()
?LH
?Se;
?Sel
devtools::check()
.Last.error.trace
devtools::check()
?Sel
