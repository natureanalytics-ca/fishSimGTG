library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 1
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj, TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel" )
ceiling(1.5)
ceiling(1.1)
ceiling(3/2)
ceiling(3/2+0.5)
ceiling(4/2+0.5)
ceiling(10/2+0.5)
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 1
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj, TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel" )
FisheryObj
LifeHistoryObj
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 1
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj, TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel" )
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 5
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.5, 0.8)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, StochasticObj = StochasticObj, wd = here("data-test"), fileName = "constantModel" )
#-----------------------
#Build inputObject
#-----------------------
TimeAreaObj@recArea <- TimeAreaObj@recArea / sum(TimeAreaObj@recArea) #Make sure this sums to 1
lh<-LHwrapper(LifeHistoryObj, TimeAreaObj)
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj, doPlot = FALSE)
selPro<-selWrapper(lh, TimeAreaObj, FisheryObj = ProFisheryObj, doPlot = FALSE)
#----------------------------
#Build stochastic components
#----------------------------
set.seed(seed = seed)
#Rec devs
RdevMatrix<-recDev(LifeHistoryObj, TimeAreaObj, StrategyObj)$Rmult
#Initial depletion (SSB rel)
Ddev<-bioDev(TimeAreaObj, StochasticObj)$Ddev
#Historical cpue
Cdev<-cpueDev(TimeAreaObj, StochasticObj)$Cdev
StrategyObj = NULL
#-----------------------
#Build inputObject
#-----------------------
TimeAreaObj@recArea <- TimeAreaObj@recArea / sum(TimeAreaObj@recArea) #Make sure this sums to 1
lh<-LHwrapper(LifeHistoryObj, TimeAreaObj)
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj, doPlot = FALSE)
selPro<-selWrapper(lh, TimeAreaObj, FisheryObj = ProFisheryObj, doPlot = FALSE)
#----------------------------
#Build stochastic components
#----------------------------
set.seed(seed = seed)
#Rec devs
RdevMatrix<-recDev(LifeHistoryObj, TimeAreaObj, StrategyObj)$Rmult
#Initial depletion (SSB rel)
Ddev<-bioDev(TimeAreaObj, StochasticObj)$Ddev
#Historical cpue
Cdev<-cpueDev(TimeAreaObj, StochasticObj)$Cdev
is.null(lh)
is.null(selHist)
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj, doPlot = FALSE)
selHist
HistFisheryObj = FisheryObj
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj, doPlot = FALSE)
is.null(selHist)
is.null(RdevMatrix)
is.null(Ddev)
is.null(Cdev)
StochasticObj
Cdev<-cpueDev(TimeAreaObj, StochasticObj)$Cdev
Cdev
length(TimeAreaObj@iterations) == 0
TimeAreaObj@iterations < 1
isTRUE(class(StochasticObj) == "Stochastic" && length(StochasticObj@historicalCPUE) < 2)
class(StochasticObj) == "Stochastic"
length(StochasticObj@historicalCPUE)
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 5
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
HistFisheryObj = FisheryObj
TimeAreaObj@recArea <- TimeAreaObj@recArea / sum(TimeAreaObj@recArea) #Make sure this sums to 1
lh<-LHwrapper(LifeHistoryObj, TimeAreaObj)
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj, doPlot = FALSE)
selPro<-selWrapper(lh, TimeAreaObj, FisheryObj = ProFisheryObj, doPlot = FALSE)
ProFisheryObj = NULL
StrategyObj = NULL
StochasticObj = NULL
#Build inputObject
#-----------------------
TimeAreaObj@recArea <- TimeAreaObj@recArea / sum(TimeAreaObj@recArea) #Make sure this sums to 1
lh<-LHwrapper(LifeHistoryObj, TimeAreaObj)
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj, doPlot = FALSE)
selPro<-selWrapper(lh, TimeAreaObj, FisheryObj = ProFisheryObj, doPlot = FALSE)
#----------------------------
#Build stochastic components
#----------------------------
set.seed(seed = seed)
#Rec devs
RdevMatrix<-recDev(LifeHistoryObj, TimeAreaObj, StrategyObj)$Rmult
#Initial depletion (SSB rel)
Ddev<-bioDev(TimeAreaObj, StochasticObj)$Ddev
#Historical cpue
Cdev<-cpueDev(TimeAreaObj, StochasticObj)$Cdev
seed = 1
#-----------------------
#Build inputObject
#-----------------------
TimeAreaObj@recArea <- TimeAreaObj@recArea / sum(TimeAreaObj@recArea) #Make sure this sums to 1
lh<-LHwrapper(LifeHistoryObj, TimeAreaObj)
selHist<-selWrapper(lh, TimeAreaObj, FisheryObj = HistFisheryObj, doPlot = FALSE)
selPro<-selWrapper(lh, TimeAreaObj, FisheryObj = ProFisheryObj, doPlot = FALSE)
#----------------------------
#Build stochastic components
#----------------------------
set.seed(seed = seed)
#Rec devs
RdevMatrix<-recDev(LifeHistoryObj, TimeAreaObj, StrategyObj)$Rmult
#Initial depletion (SSB rel)
Ddev<-bioDev(TimeAreaObj, StochasticObj)$Ddev
#Historical cpue
Cdev<-cpueDev(TimeAreaObj, StochasticObj)$Cdev
lh
selHist
selPro
RdevMatrix
Ddev
Cdev
is.null(lh) ||
is.null(selHist) ||
is.null(RdevMatrix) ||
is.null(Ddev) ||
is.null(Cdev) ||
length(TimeAreaObj@iterations) == 0 ||
TimeAreaObj@iterations < 1 ||
isTRUE(!is.null(StrategyObj) &  is.null(selPro)) ||
isTRUE(TimeAreaObj@areas != dim(TimeAreaObj@move)[1] | TimeAreaObj@areas != dim(TimeAreaObj@move)[2]) ||
isTRUE(TimeAreaObj@areas != dim(TimeAreaObj@historicalEffort)[2] | TimeAreaObj@historicalYears != dim(TimeAreaObj@historicalEffort)[1])
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 5
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
#Do initial eq. conditions carry forward if F is constant?
#Can we achieve this with the minimum required inputs?
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 5
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 5
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "SPR"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel", doPlot = FALSE)
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 1
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 1
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
#Do initial eq. conditions carry forward if F is constant?
#Can we achieve this with the minimum required inputs?
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 1
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 1
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 5
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.5, 0.8)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, StochasticObj=StochasticObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 10
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.1, 0.9)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, StochasticObj=StochasticObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
?sfExportAll
solveD
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 10
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.1, 0.9)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, StochasticObj=StochasticObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
devtools::load_all()
library(here)
LifeHistoryObj <- LifeHistoryExample
LifeHistoryObj@recSD <- 0
LifeHistoryObj@recRho <- 0
LifeHistoryObj@Steep <- 0.5
FisheryObj<-new("Fishery")
FisheryObj@title<-"Test"
FisheryObj@vulType<-"logistic"
FisheryObj@vulParams<-c(50,75)
FisheryObj@retType<-"full"
FisheryObj@retMax <- 1
FisheryObj@Dmort <- 0
TimeAreaObj<-new("TimeArea")
TimeAreaObj@title = "Test"
TimeAreaObj@gtg = 13
TimeAreaObj@areas = 2
TimeAreaObj@recArea = c(0.99, 0.01)
TimeAreaObj@iterations = 10
TimeAreaObj@historicalYears = 50
TimeAreaObj@historicalBio = 0.5
TimeAreaObj@historicalBioType = "relB"
TimeAreaObj@move <- matrix(c(1,0, 0,1), nrow=2, ncol=2, byrow=FALSE)
TimeAreaObj@historicalEffort<-matrix(1:1, nrow=50, ncol=2)
StochasticObj<-new("Stochastic")
StochasticObj@historicalBio = c(0.1, 0.9)
runProjection(LifeHistoryObj = LifeHistoryObj, TimeAreaObj = TimeAreaObj, HistFisheryObj = FisheryObj, StochasticObj=StochasticObj, wd = here("data-test"), fileName = "constantModel", doPlot = TRUE)
sfRemoveAll()
sfStop()
cores<-min(iterations, detectCores())
iterations<-10
cores<-min(iterations, detectCores())
sfInit(parallel=T, cpus=cores)
sfLibrary(fishSimGTG)
renv::snapshot()
iterations<-10
cores<-min(iterations, detectCores())
sfInit(parallel=T, cpus=cores)
sfLibrary(fishSimGTG)
sfLibrary(here)
