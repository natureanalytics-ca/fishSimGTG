usethis::use_data(LifeHistoryExample)
usethis::use_data(lbsprSimExample)
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
devtools::check()
devtools::build()
shinyApp(
fluidPage(
span(HTML("&Delta;", "&#916;", "&#x0394;")) # the HTML() function missed
),
function(...) {}
)
library(shiny)
shinyApp(
fluidPage(
span(HTML("&Delta;", "&#916;", "&#x0394;")) # the HTML() function missed
),
function(...) {}
)
library(shiny)
shinyApp(
fluidPage(
span(HTML("&times;", "&#916;", "&#x0394;")) # the HTML() function missed
),
function(...) {}
)
library(shiny)
shinyApp(
fluidPage(
paste("Test", span(HTML("&times;")))
),
function(...) {}
)
library(shiny)
shinyApp(
fluidPage(
HTML(paste("Test", span(HTML("&times;"))))
),
function(...) {}
)
devtools::load_all()
library(LBSPR)
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample@Linf<-100
LifeHistoryExample@L50<-66
LifeHistoryExample@L95<-67
LifeHistoryExample@MK<-1.5
LifeHistoryExample@LW_A<-0.01
LifeHistoryExample@LW_B<-3
LifeHistoryExample@title<-"Simulated life history"
LifeHistoryExample@shortDescription<-"Simulated life history of a fish based on B-H invariants"
LifeHistoryExample@speciesName<-"Example fish"
LifeHistoryExample@L_type<-"TL"
LifeHistoryExample@L_units<-"cm"
LifeHistoryExample@Walpha_units<-"g"
LifeHistoryExample@K<-0.2
LifeHistoryExample@M<-0.3
LifeHistoryExample@Tmax<- floor(-log(0.01)/0.3)
LifeHistoryExample@Steep<-0.99
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
check()
devtools::check()
devtools::build()
install.packages("D:/Cloud/Nature Analytics web apps/Packages and modules/fishSimGTG_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("D:/Cloud/Nature Analytics web apps/Packages and modules/fishSimGTG_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::load_all()
library(LBSPR)
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample@Linf<-100
LifeHistoryExample@L50<-66
LifeHistoryExample@L95<-67
LifeHistoryExample@MK<-1.5
LifeHistoryExample@LW_A<-0.01
LifeHistoryExample@LW_B<-3
LifeHistoryExample@title<-"Example fish"
LifeHistoryExample@shortDescription<-"Simulated life history of a fish based on B-H invariants"
LifeHistoryExample@speciesName<-"Example fish"
LifeHistoryExample@L_type<-"TL"
LifeHistoryExample@L_units<-"cm"
LifeHistoryExample@Walpha_units<-"g"
LifeHistoryExample@K<-0.2
LifeHistoryExample@M<-0.3
LifeHistoryExample@Tmax<- floor(-log(0.01)/0.3)
LifeHistoryExample@Steep<-0.99
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
check()
devtools::check()
devtools::build()
check()
devtools::load_all()
library(LBSPR)
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample@Linf<-100
LifeHistoryExample@L50<-66
LifeHistoryExample@L95<-67
LifeHistoryExample@MK<-1.5
LifeHistoryExample@LW_A<-0.01
LifeHistoryExample@LW_B<-3
LifeHistoryExample@title<-"Example fish"
LifeHistoryExample@shortDescription<-"Simulated life history of a fish based on B-H invariants"
LifeHistoryExample@speciesName<-"Example fish"
LifeHistoryExample@L_type<-"TL"
LifeHistoryExample@L_units<-"cm"
LifeHistoryExample@Walpha_units<-"g"
LifeHistoryExample@K<-0.2
LifeHistoryExample@M<-0.3
LifeHistoryExample@Tmax<- floor(-log(0.01)/0.3)
LifeHistoryExample@Steep<-0.99
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
devtools::check()
devtools::build()
get_package_url <- function(pkg){
version <- try(
available.packages()[pkg,"Version"],
silent = TRUE)
if(inherits(version,"try-error"))
stop("Package '",pkg,"' is not available")
contriburl <- contrib.url(getOption("repos"), "binary")
url <- file.path(
dirname(contriburl),
get_last_R_version(2),
paste0(pkg,"_",version,".zip"))
url
}
get_package_url("fishSimGTG")
library(fishSimGTG)
get_package_url("fishSimGTG")
available.packages()[fishSimGTG,"Version"]
available.packages()
X<-available.packages()
X[1,]
available.packages(bslib)
available.packages("bslib")
available.packages("ACNE")
available.packages(ACNE)
available.packages
contrib.url(repos, type)
getOption("repos")
X[1:2,]
installed. packages()
installed.packages()
X<-installed.packages()
X[1,]
devtools::load_all()
library(LBSPR)
library(shiny)
library(waiter)
devtools::load_all()
ui <- fluidPage(
useWaiter(),
useHostess(), # include dependencies
actionButton("btn", "render"),
)
server <- function(input, output){
host <- Hostess$new()
w <- Waiter$new(
html = host$get_loader(
preset = "bubble",
text_color = "black",
center_page = TRUE,
class = "",
min = 0,
max = 100,
svg = NULL,
progress_type = "fill",
fill_direction = c("btt", "ttb", "ltr", "rtl"),
stroke_direction = c("normal", "reverse"),
fill_color = NULL,
stroke_color = "pink"
),
color = transparent(alpha = 0.2),
fadeout = TRUE
)
w$show()
lbsprSimWrapper(LifeHistory = LifeHistoryExample, hostName=host){)
w$hide()
}
server <- function(input, output){
host <- Hostess$new()
w <- Waiter$new(
html = host$get_loader(
preset = "bubble",
text_color = "black",
center_page = TRUE,
class = "",
min = 0,
max = 100,
svg = NULL,
progress_type = "fill",
fill_direction = c("btt", "ttb", "ltr", "rtl"),
stroke_direction = c("normal", "reverse"),
fill_color = NULL,
stroke_color = "pink"
),
color = transparent(alpha = 0.2),
fadeout = TRUE
)
w$show()
lbsprSimWrapper(LifeHistory = LifeHistoryExample, hostName=host)
w$hide()
}
if(interactive()) shinyApp(ui, server)
devtools::check()
library(waiater)
library(waiter)
devtools::check()
devtools::check()
devtools::load_all()
LH_to_dataframe <- function(LifeHistoryObj) {
nms <- slotNames(LifeHistoryObj)
lst <- lapply(nms, function(nm) slot(LifeHistoryObj, nm))
ind<-which(lengths(lst)!=0)
t(as.data.frame(setNames(lst[ind], nms[ind])))
}
LH_to_dataframe(LifeHistoryExample)
LifeHistoryExample
slotNames(LifeHistoryExample)
LH_to_dataframe <- function(LifeHistoryObj) {
nms <- slotNames(LifeHistoryObj)
lst <- lapply(nms, function(nm) slot(LifeHistoryObj, nm))
ind<-which(lengths(lst)!=0)
out<-t(as.data.frame(setNames(lst[ind], nms[ind])))
str_replace(out, "title", "Title")
str_replace(out, "speciesName", "Species")
str_replace(out, "shortDescription", "Short description")
str_replace(out, "L_type", "Length type")
str_replace(out, "L_units", "Length units")
str_replace(out, "Walpha_units", "Weight units")
str_replace(out, "Linf", "von Bertalanffy Loo")
str_replace(out, "K", "von Bertalanffy K")
str_replace(out, "t0", "von Bertalanffy t0")
str_replace(out, "L50", "Length at 50% maturity")
str_replace(out, "L95", "Length at 95% maturity")
str_replace(out, "M", "Natural mortality")
str_replace(out, "MK", "M/K")
str_replace(out, "LW_A", "Length-weight alpha")
str_replace(out, "LW_B", "Length-weight beta")
str_replace(out, "Tmax", "Maximum age")
str_replace(out, "Steep", "Beverton-Holt steepness")
str_replace(out, "author", "Author")
str_replace(out, "authAffiliation", "Author affiliation")
str_replace(out, "longDescription", "Long description")
out
}
LH_to_dataframe(LifeHistoryExample)
library(stringr)
LH_to_dataframe(LifeHistoryExample)
LifeHistoryObj<-LifeHistoryExample
nms <- slotNames(LifeHistoryObj)
lst <- lapply(nms, function(nm) slot(LifeHistoryObj, nm))
ind<-which(lengths(lst)!=0)
out<-t(as.data.frame(setNames(lst[ind], nms[ind])))
str_replace(out, "title", "Title")
str_replace(out, "title", "Title")
?str_replace
out<-t(as.data.frame(setNames(lst[ind], nms[ind])))
out<-str_replace(out, "title", "Title")
out
out<-t(as.data.frame(setNames(lst[ind], nms[ind])))
out
out<-str_replace(out, "title", "Title")
rownames_to_column(out)
library(tibble)
rownames_to_column(out)
out<-as.data.frame(t(setNames(lst[ind], nms[ind])))
out
out<-as.data.frame(setNames(lst[ind], nms[ind]))
out
out<-t(as.data.frame(setNames(lst[ind], nms[ind])))
out
rownames_to_column(out)
rownames_to_column(data.frame(out))
rownames(out)<-c("var", "value")
colnames(out)<-c("var", "value")
out<-t(as.data.frame(setNames(lst[ind], nms[ind])))
rownames_to_column(data.frame(out))
out
out<-t(as.data.frame(setNames(lst[ind], nms[ind])))
out<-rownames_to_column(data.frame(out))
colnames(out)<-c("var", "value")
out
out<-str_replace(out, "title", "Title")
out<-str_replace(out$var, "title", "Title")
out$var
data.frame(setNames(lst[ind], nms[ind]))) %>%
rownames_to_column()
data.frame(setNames(lst[ind], nms[ind])) %>%
rownames_to_column()
data.frame(setNames(lst[ind], nms[ind])) %>%
rownames_to_column
data.frame(setNames(lst[ind], nms[ind])) %>%
tibble::rownames_to_column() %>%
pivot_longer(-rowname) %>%
pivot_wider(names_from=rowname, values_from=value)
??pivot_wider
?? pivot_longer
library(tibble)
library(tidyr)
data.frame(setNames(lst[ind], nms[ind])) %>%
tibble::rownames_to_column() %>%
pivot_longer(-rowname) %>%
pivot_wider(names_from=rowname, values_from=value)
data.frame(setNames(lst[ind], nms[ind])) %>%
rownames_to_column() %>%
pivot_longer(-rowname)
t(data.frame(setNames(lst[ind], nms[ind]))) %>%
rownames_to_column()
data.frame(setNames(lst[ind], nms[ind]))) %>%
gather()
mtcars %>%
rownames_to_column %>%
gather(variable, value, -rowname) %>%
spread(rowname, value)
data.frame(setNames(lst[ind], nms[ind]))) %>%
rownames_to_column() %>%
gather()
data.frame(setNames(lst[ind], nms[ind])) %>%
rownames_to_column() %>%
gather()
data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
lst
data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
dim(X)
X[,1]
data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace(out, "speciesName", "Species") %>%
str_replace(out, "shortDescription", "Short description") %>%
str_replace(out, "L_type", "Length type") %>%
str_replace(out, "L_units", "Length units") %>%
str_replace(out, "Walpha_units", "Weight units") %>%
str_replace(out, "Linf", "von Bertalanffy Loo") %>%
str_replace(out, "K", "von Bertalanffy K") %>%
str_replace(out, "t0", "von Bertalanffy t0") %>%
str_replace(out, "L50", "Length at 50% maturity") %>%
str_replace(out, "L95", "Length at 95% maturity") %>%
str_replace(out, "M", "Natural mortality") %>%
str_replace(out, "MK", "M/K") %>%
str_replace(out, "LW_A", "Length-weight alpha") %>%
str_replace(out, "LW_B", "Length-weight beta") %>%
str_replace(out, "Tmax", "Maximum age") %>%
str_replace(out, "Steep", "Beverton-Holt steepness") %>%
str_replace(out, "author", "Author") %>%
str_replace(out, "authAffiliation", "Author affiliation") %>%
str_replace(out, "longDescription", "Long description")
LifeHistoryExample
data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace(out, "speciesName", "Species") %>%
str_replace(out, "shortDescription", "Short description") %>%
str_replace(out, "L_type", "Length type") %>%
str_replace(out, "L_units", "Length units") %>%
str_replace(out, "Walpha_units", "Weight units") %>%
str_replace(out, "Linf", "von Bertalanffy Loo") %>%
str_replace(out, "K", "von Bertalanffy K") %>%
str_replace(out, "t0", "von Bertalanffy t0") %>%
str_replace(out, "L50", "Length at 50% maturity") %>%
str_replace(out, "L95", "Length at 95% maturity") %>%
str_replace(out, "M", "Natural mortality") %>%
str_replace(out, "MK", "M/K") %>%
str_replace(out, "LW_A", "Length-weight alpha") %>%
str_replace(out, "LW_B", "Length-weight beta") %>%
str_replace(out, "Tmax", "Maximum age") %>%
str_replace(out, "Steep", "Beverton-Holt steepness") %>%
str_replace(out, "author", "Author") %>%
str_replace(out, "authAffiliation", "Author affiliation") %>%
str_replace(out, "longDescription", "Long description")
data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace("speciesName", "Species") %>%
str_replace("shortDescription", "Short description") %>%
str_replace("L_type", "Length type") %>%
str_replace("L_units", "Length units") %>%
str_replace("Walpha_units", "Weight units") %>%
str_replace("Linf", "von Bertalanffy Loo") %>%
str_replace("K", "von Bertalanffy K") %>%
str_replace("t0", "von Bertalanffy t0") %>%
str_replace("L50", "Length at 50% maturity") %>%
str_replace("L95", "Length at 95% maturity") %>%
str_replace("M", "Natural mortality") %>%
str_replace("MK", "M/K") %>%
str_replace("LW_A", "Length-weight alpha") %>%
str_replace("LW_B", "Length-weight beta") %>%
str_replace("Tmax", "Maximum age") %>%
str_replace("Steep", "Beverton-Holt steepness") %>%
str_replace("author", "Author") %>%
str_replace("authAffiliation", "Author affiliation") %>%
str_replace("longDescription", "Long description")
data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace("speciesName", "Species")
data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace("title", "Title")
data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
X
str_replace(X, "title", "Title")
str_replace(X$key, "title", "Title")
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace(~key, "title", "Title")
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
X
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace(key, "title", "Title")
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace(.key, "title", "Title")
colnames(X)
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace(key, "title", "Title")
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
str_replace("title", "Title")
? str_replace
X
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
mutate_at("key", str_replace, "title", "Title")
?tidyverse
library(tidyverse)
library(tidyverse)
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
mutate_at("key", str_replace, "title", "Title")
devtools::load_all()
LifeHistoryObj<-LifeHistoryExample
nms <- slotNames(LifeHistoryObj)
lst <- lapply(nms, function(nm) slot(LifeHistoryObj, nm))
ind<-which(lengths(lst)!=0)
LifeHistoryObj
devtools::load_all()
library(LBSPR)
LifeHistoryExample<-new("LifeHistory")
LifeHistoryExample@Linf<-100
LifeHistoryExample@L50<-66
LifeHistoryExample@L95<-67
LifeHistoryExample@MK<-1.5
LifeHistoryExample@LW_A<-0.01
LifeHistoryExample@LW_B<-3
LifeHistoryExample@title<-"Example fish"
LifeHistoryExample@shortDescription<-"Simulated life history of a fish based on B-H invariants"
LifeHistoryExample@speciesName<-"Example fish"
LifeHistoryExample@L_type<-"TL"
LifeHistoryExample@L_units<-"cm"
LifeHistoryExample@Walpha_units<-"g"
LifeHistoryExample@K<-0.2
LifeHistoryExample@M<-0.3
LifeHistoryExample@t0<-0
LifeHistoryExample@Tmax<- floor(-log(0.01)/0.3)
LifeHistoryExample@Steep<-0.99
lbsprSimExample<-lbsprSimWrapper(LifeHistoryExample)
usethis::use_data(LifeHistoryExample, overwrite = TRUE)
usethis::use_data(lbsprSimExample, overwrite = TRUE)
devtools::load_all()
LifeHistoryObj<-LifeHistoryExample
nms <- slotNames(LifeHistoryObj)
lst <- lapply(nms, function(nm) slot(LifeHistoryObj, nm))
ind<-which(lengths(lst)!=0)
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather()
X
X<-data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
mutate_at("key", str_replace, "title", "Title")
X
data.frame(setNames(lst[ind], nms[ind])) %>%
gather() %>%
mutate_at("key", str_replace, "title", "Title") %>%
mutate_at("key", str_replace, "speciesName", "Species") %>%
mutate_at("key", str_replace, "shortDescription", "Short description") %>%
mutate_at("key", str_replace, "L_type", "Length type") %>%
mutate_at("key", str_replace, "L_units", "Length units") %>%
mutate_at("key", str_replace, "Walpha_units", "Weight units") %>%
mutate_at("key", str_replace, "Linf", "von Bertalanffy Loo") %>%
mutate_at("key", str_replace, "K", "von Bertalanffy K") %>%
mutate_at("key", str_replace, "t0", "von Bertalanffy t0") %>%
mutate_at("key", str_replace, "L50", "Length at 50% maturity") %>%
mutate_at("key", str_replace, "L95", "Length at 95% maturity") %>%
mutate_at("key", str_replace, "M", "Natural mortality") %>%
mutate_at("key", str_replace, "MK", "M/K") %>%
mutate_at("key", str_replace, "LW_A", "Length-weight alpha") %>%
mutate_at("key", str_replace, "LW_B", "Length-weight beta") %>%
mutate_at("key", str_replace, "Tmax", "Maximum age") %>%
mutate_at("key", str_replace, "Steep", "Beverton-Holt steepness") %>%
mutate_at("key", str_replace, "author", "Author") %>%
mutate_at("key", str_replace, "authAffiliation", "Author affiliation") %>%
mutate_at("key", str_replace, "longDescription", "Long description")
devtools::check()
devtools::check()
